#!/usr/bin/env fish
# Check if a folder is provided as an argument
if test (count $argv) -eq 1
    set selected $argv[1]
else
    # Search for directories in ~/code (customize paths as needed)
    set selected (find ~/Coding ~/.config ~/dotfiles -type d -not -path "*/.git/*" \
        -not -path "*/node_modules/*" \
        -not -path "*/bin/*" \
        -not -path "*/cache/*" \
        -not -path "*/.angular/*" \
        -not -path "*/env/*" \
        -not -path "*/obj/*" | fzf)
end

# Exit if no folder is selected
if test -z "$selected"
    exit 0
end

# Get session name from folder (replace dots with underscores)
set selected_name (basename "$selected" | string replace -a '.' '_')

# Check if tmux is running
set tmux_running (pgrep tmux)

# If not in tmux and tmux isn't running, create a new session with two windows
if test -z "$TMUX" -a -z "$tmux_running"
    tmux new-session -s $selected_name -c $selected -n "editor"\; \
        new-window -t "$selected_name" -c $selected -n "shell"\; \
        select-window -t "$selected_name:1"
    exit 0
end

# If session doesn't exist, create it in detached mode with two windows
if not tmux has-session -t=$selected_name 2>/dev/null
    tmux new-session -ds $selected_name -c $selected -n "editor"
    tmux new-window -t "$selected_name" -c $selected -n "shell"
    tmux select-window -t "$selected_name:1"
end

# Switch to the session (or attach if not in tmux)
if test -n "$TMUX"
    tmux switch-client -t $selected_name
else
    tmux attach-session -t $selected_name
end
